stages:
  - test
  - docker

cache:
  paths:
  - node_modules/

test:
  stage: test
  image: node:16
  script:
    - npm ci
    - npm run build

docker-rc:
  stage: docker
  image: docker:stable
  only:
    - develop
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f docker/DockerFile -t $CI_REGISTRY_IMAGE/app:rc .
    - docker push $CI_REGISTRY_IMAGE/app:rc
    - docker tag $CI_REGISTRY_IMAGE/app:rc europe-west3-docker.pkg.dev/iop-tresor/tresor-tools/webapp:rc
    - cat $GCP_DEPLOY_JSON_KEY | docker login -u _json_key --password-stdin https://europe-west3-docker.pkg.dev
    - docker push europe-west3-docker.pkg.dev/iop-tresor/tresor-tools/webapp:rc

docker-latest:
  stage: docker
  image: docker:stable
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f docker/DockerFile -t $CI_REGISTRY_IMAGE/app:latest .
    - docker push $CI_REGISTRY_IMAGE/app:latest
    - docker tag $CI_REGISTRY_IMAGE/app:latest europe-west3-docker.pkg.dev/iop-tresor/tresor-tools/webapp:latest
    - cat $GCP_DEPLOY_JSON_KEY | docker login -u _json_key --password-stdin https://europe-west3-docker.pkg.dev
    - docker push europe-west3-docker.pkg.dev/iop-tresor/tresor-tools/webapp:latest
